export enum DomainExceptionCode {
  DEFAULT_DOMAIN_EXCEPTION         = 'DEFAULT_DOMAIN_EXCEPTION',
  PATIENT_NAME_REQUIRED            = 'PATIENT_NAME_REQUIRED',
  PATIENT_LASTNAME_REQUIRED        = 'PATIENT_LASTNAME_REQUIRED',
  PATIENT_CELLPHONE_REQUIRED       = 'PATIENT_CELLPHONE_REQUIRED',
  PATIENT_EMAIL_REQUIRED           = 'PATIENT_EMAIL_REQUIRED',
  PATIENT_EMAIL_INVALID            = 'PATIENT_EMAIL_INVALID',
  PATIENT_PASSWORD_REQUIRED        = 'PATIENT_PASSWORD_REQUIRED',
  PATIENT_PASSWORD_LENGTH_INVALID  = 'PATIENT_PASSWORD_LENGTH_INVALID',
  PATIENT_GUID_INVALID             = 'PATIENT_GUID_INVALID',
  PATIENT_NOT_FOUND                = 'PATIENT_NOT_FOUND'
}

export abstract class DomainException extends Error {
  constructor(message?: string) {
    super(message)
    this.name = DomainExceptionCode.DEFAULT_DOMAIN_EXCEPTION
  }
}
